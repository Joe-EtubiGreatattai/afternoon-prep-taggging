openapi: 3.0.0
info:
  title: AfternoonPrep Question Tagging API
  version: 1.0.0
  description: API for tagging theory and objective questions using Google Gemini and other AI models.
servers:
  - url: 'http://localhost:4000'
    description: Local development server

paths:
  /objective:
    post:
      summary: Tag Objective Questions
      description: Endpoint to tag objective questions using Google Gemini AI and other models. Expects a JSON file as input.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                inputFile:
                  type: string
                  format: binary
                  description: JSON file containing the questions to be tagged
      responses:
        '200':
          description: Successfully tagged the questions
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        text:
                          type: string
                          description: The text of the question
                        options:
                          type: array
                          items:
                            type: object
                            properties:
                              option:
                                type: string
                                description: The option label (e.g., A, B, C, D)
                              text:
                                type: string
                                description: The text of the option
                              correct:
                                type: boolean
                                description: Indicates if the option is correct
                              personalityType:
                                type: integer
                                description: Personality type associated with the option
                        topic:
                          type: array
                          items:
                            type: string
                          description: List of topics tagged to the question
                        tags:
                          type: array
                          items:
                            type: string
                          description: List of tags generated for the question
                        explanation:
                          type: string
                          description: Explanation of the question
                        ai_answer:
                          type: array
                          items:
                            type: string
                          description: AI generated answer(s) for the question
                        difficulty:
                          type: string
                          description: Difficulty level of the question
                        gradeLevel:
                          type: string
                          description: Grade level of the question
                        uploader:
                          type: string
                          description: Uploader of the question
                        uploader_id:
                          type: string
                          description: ID of the uploader
                        imageDescription:
                          type: string
                          description: Description of the image associated with the question
                        sectionID:
                          type: string
                          description: Section ID of the question
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid request body. Input file is required.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error.
